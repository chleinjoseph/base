
'use client';

import { useActionState, useRef } from "react";
import { useFormStatus } from "react-dom";
import Image from "next/image";
import { handleGenerateImage } from "@/app/actions";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Loader2, Copy } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

function GenerateButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full">
      {pending && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
      Generate Image
    </Button>
  );
}

export default function AIToolsPage() {
  const initialState = { imageUrl: null, error: null };
  const [state, formAction] = useActionState(handleGenerateImage, initialState);
  const formRef = useRef<HTMLFormElement>(null);
  const { toast } = useToast();

  const handleCopy = () => {
    if (state.imageUrl) {
      navigator.clipboard.writeText(state.imageUrl);
      toast({ title: "Copied!", description: "Image URL copied to clipboard." });
    }
  };

  return (
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <Card>
        <CardHeader>
          <CardTitle>AI Image Generation</CardTitle>
          <CardDescription>
            Create unique images for your blog posts and projects using a text prompt.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form ref={formRef} action={formAction} className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="prompt">Image Prompt</Label>
              <Input
                id="prompt"
                name="prompt"
                placeholder="e.g., A diverse group of empowered youth working on laptops"
              />
              {state?.error && (
                <p className="text-sm text-destructive">{state.error}</p>
              )}
            </div>
            <GenerateButton />
          </form>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Generated Image</CardTitle>
          <CardDescription>Your generated image will appear here. Copy the URL to use it.</CardDescription>
        </CardHeader>
        <CardContent className="flex flex-col items-center justify-center text-center p-6 space-y-4 min-h-[300px] bg-muted/50 rounded-lg">
          {state.imageUrl ? (
            <>
              <div className="relative w-full aspect-video rounded-md overflow-hidden border">
                <Image
                  src={state.imageUrl}
                  alt="Generated by AI"
                  fill
                  style={{ objectFit: 'contain' }}
                />
              </div>
              <Button onClick={handleCopy} variant="outline" className="w-full">
                <Copy className="mr-2 h-4 w-4" />
                Copy Image URL
              </Button>
              <p className="text-xs text-muted-foreground">Paste this URL into the 'Image URL' field when creating a post.</p>
            </>
          ) : (
            <div className="text-center text-muted-foreground">
              <div className="text-6xl mb-4">üñºÔ∏è</div>
              <p>Your image will be generated here.</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
